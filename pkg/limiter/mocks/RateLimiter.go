// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// RateLimiter is an autogenerated mock type for the RateLimiter type
type RateLimiter struct {
	mock.Mock
}

// Acquire provides a mock function with given fields:
func (_m *RateLimiter) Acquire() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Status provides a mock function with given fields:
func (_m *RateLimiter) Status() (int, int, time.Duration) {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 int
	if rf, ok := ret.Get(1).(func() int); ok {
		r1 = rf()
	} else {
		r1 = ret.Get(1).(int)
	}

	var r2 time.Duration
	if rf, ok := ret.Get(2).(func() time.Duration); ok {
		r2 = rf()
	} else {
		r2 = ret.Get(2).(time.Duration)
	}

	return r0, r1, r2
}
